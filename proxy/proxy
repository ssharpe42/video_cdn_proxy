#!/usr/bin/env python

import sys
import thread
import select
from socket_utils import socket_bind_listen, socket_bind_connect, receive

MAX_SIZE = 1  #Maximum bits to receive
SERVER_PORT = 8080
FAKE_PORT = 0
INIT_TP = 0.0   #Initial throughput value


class Proxy:

	"""Proxy Class"""

	def __init__(self, listen_port, fake_ip, server_ip):

		#Set all inputs
		self.listen_port = listen_port
		self.fake_ip = fake_ip
		self.server_ip = server_ip
		self.alpha = .5

	def run(self):

		""" Run proxy """

		# Bind and listen for clients
		self.client_socket = socket_bind_listen('', self.listen_port)

		print 'Proxy listening for client connections...'

		# Loop to keep accepting connections
		while True:

			# Accept client connection
			client, addr = self.client_socket.accept()
			print 'Connected to client at:',client.getpeername()

			print 'Staring thread...'
			thread.start_new_thread(self.single_proxy, (client,))


	def single_proxy(self, client):

		# Bind to fake ip and connect to server
		server = socket_bind_connect(self.fake_ip, FAKE_PORT, self.server_ip, SERVER_PORT)

		# If server doesn't exist, disconnect from client and continue loop
		if not server:
			print "Could not connect to server. Closing connection to client. "
			client.close()

		else:
			print "Connected to server at:",server.getpeername()

			client_request = receive(client, server, MAX_SIZE)
			# Send reqest to server
			server.send(client_request)
			print 'Client sent request:', client_request[:-1]

			while True:

				read_ready,_, _ =select.select([server], [], [])
				# Receive message from server
				for rr_server in read_ready:

					server_msg = receive(rr_server, client, MAX_SIZE)
					try:
						#Send to client
						client.send(server_msg)
					except:
						break
					print 'Data sent server --> client:', server_msg[:-1]

			# Close connections if break out of loop
			if server:
				server.close()
			if client:
				client.close()




if __name__ == '__main__':

	# log = sys.argv[1]
	# alpha = float(sys.argv[2])
	listen_port = int(sys.argv[1])
	fake_ip  = sys.argv[2]
	server_ip = sys.argv[3]

	P = Proxy(listen_port=listen_port, fake_ip=fake_ip, server_ip=server_ip)
	P.run()
